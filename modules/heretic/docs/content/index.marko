import Prism from "prismjs"
import "prismjs/plugins/custom-class/prism-custom-class"
import pageConfig from "../page.js"
import areas from "../../data/areas.json"

$ Prism.plugins.customClass.map({ number: "prism-number", tag: "prism-tag" });
<if(state.ready)>
    <div class="hr-docs-columns-wrap">
        <div class="columns">
            <div class="column is-narrow">
                <div id="hr_docs_menu_dummy"/>
                <div id="hr_docs_menu_dummy_2"/>
                <if(state.isMobile)>
                    <button class="button is-light is-small" type="button" on-click("onNavigationClick")>
                        <t>docsNavigation</t>
                    </button>
                </if>
                <if(!state.isMobile || state.navOpen)>
                    <aside class="menu hr-docs-menu-wrap" on-click("onDocsMenuClick") id="hr_docs_menu">
                        <ul class="menu-list hr-docs-menu-list">
                            <for|a, index| of=areas>
                                <if(a.title)>
                                    <li class="mt-4 mb-4">
                                        <p class="menu-label">${a.title}</p>
                                    </li>
                                </if>
                                <else>
                                    <li>
                                        <a nointercept="true" href=`${pageConfig.url}?area=${a.area}` data-id=a.area class=(state.area === a.area ? "is-active" : "")>${a.label}</a>
                                        <if(a.subMenu)>
                                            <ul>
                                                <for|su| of=a.subMenu>
                                                    <li>
                                                        <a nointercept="true" href=`${pageConfig.url}?area=${su.area}` data-id=su.area class=(state.area === su.area ? "is-active" : "")>${su.label}</a>
                                                    </li>
                                                </for>
                                            </ul>
                                        </if>
                                    </li>
                                </else>
                            </for>
                        </ul>
                    </aside>
                </if>
            </div>
            <div class="column is-auto">
                <${state.areaComponent}/>
            </div>
        </div>
        <div
            class="hr-docs-columns-loading"
            style={
                display: state.loading ? "flex" : "none"
            }>
            <hloading-dots/>
        </div>
    </div>
    <hnotify key="notify"/>
</if>
